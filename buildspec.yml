---
version: 0.2

env:
  variables:
    AWS_REGION: "us-east-1"
    AWS_ACCOUNT_ID: "057959860487"
    ECR_REPO_NAME: "multicloud-prowler-repo"
    IMAGE_TAG: "latest"
    FULL_ECR_URI: "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"

phases:
  install:
    commands:
      - echo "=== Validando dependências no ambiente de build ==="
      - if ! command -v jq &> /dev/null; then echo "Instalando jq..."; apt-get update -y && apt-get install -y jq; fi
      - aws --version
      - docker --version

  pre_build:
    commands:
      - echo "=== Login no Amazon ECR ==="
      - aws ecr get-login-password --region "$AWS_REGION" | docker login --username AWS --password-stdin "$FULL_ECR_URI"

  build:
    commands:
      - echo "=== Construindo imagem Docker ==="
      - docker build -t "$ECR_REPO_NAME:latest" -f Dockerfile.prowler .
      - docker tag "$ECR_REPO_NAME:latest" "$FULL_ECR_URI/$ECR_REPO_NAME:$IMAGE_TAG"

  post_build:
    commands:
      - echo "=== Publicando imagem no Amazon ECR ==="
      - TIMESTAMP_TAG=$(date +%Y%m%d%H%M%S)
      - docker tag "$ECR_REPO_NAME:latest" "$FULL_ECR_URI/$ECR_REPO_NAME:$TIMESTAMP_TAG"
      - docker push "$FULL_ECR_URI/$ECR_REPO_NAME:$IMAGE_TAG"
      - docker push "$FULL_ECR_URI/$ECR_REPO_NAME:$TIMESTAMP_TAG"
      - echo "=== Build concluído com sucesso ==="
      - echo "Imagens publicadas:"
      - echo "→ $FULL_ECR_URI/$ECR_REPO_NAME:$IMAGE_TAG"
      - echo "→ $FULL_ECR_URI/$ECR_REPO_NAME:$TIMESTAMP_TAG"

artifacts:
  files: []
