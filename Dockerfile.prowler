# =======================================================
# üõ∞Ô∏è Dockerfile.prowler - Multicloud Security Assessment
# -------------------------------------------------------
# - Baseado no reposit√≥rio oficial do Prowler
# - Compat√≠vel com AWS CodeBuild, ECS e Lambda
# - Mant√©m container ativo em caso de falha
# =======================================================

FROM public.ecr.aws/docker/library/python:3.12.11-slim-bookworm AS build

LABEL maintainer="https://github.com/wagnermazevedo/multicloudsecassessment"
LABEL org.opencontainers.image.source="https://github.com/prowler-cloud/prowler"

# === Vari√°veis ===
ARG AWS_CLI_VERSION=2.15.55
ARG POWERSHELL_VERSION=7.5.0

USER root

# === 1. Depend√™ncias b√°sicas ===
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget curl unzip jq git bash build-essential \
    libffi-dev libssl-dev pkg-config libicu72 libunwind8 libssl3 libcurl4 \
    ca-certificates apt-transport-https gnupg dos2unix && \
    rm -rf /var/lib/apt/lists/*

# === 2. Instala AWS CLI v2 ===
RUN curl -s "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-${AWS_CLI_VERSION}.zip" -o "awscliv2.zip" && \
    unzip -q awscliv2.zip && ./aws/install && rm -rf awscliv2.zip ./aws

# === 3. Instala PowerShell (para m√≥dulos M365) ===
RUN ARCH=$(uname -m) && \
    if [ "$ARCH" = "x86_64" ]; then \
        wget --progress=dot:giga https://github.com/PowerShell/PowerShell/releases/download/v${POWERSHELL_VERSION}/powershell-${POWERSHELL_VERSION}-linux-x64.tar.gz -O /tmp/powershell.tar.gz ; \
    elif [ "$ARCH" = "aarch64" ]; then \
        wget --progress=dot:giga https://github.com/PowerShell/PowerShell/releases/download/v${POWERSHELL_VERSION}/powershell-${POWERSHELL_VERSION}-linux-arm64.tar.gz -O /tmp/powershell.tar.gz ; \
    else \
        echo "Unsupported architecture: $ARCH" && exit 1 ; \
    fi && \
    mkdir -p /opt/microsoft/powershell/7 && \
    tar zxf /tmp/powershell.tar.gz -C /opt/microsoft/powershell/7 && \
    chmod +x /opt/microsoft/powershell/7/pwsh && \
    ln -s /opt/microsoft/powershell/7/pwsh /usr/bin/pwsh && \
    rm /tmp/powershell.tar.gz

# === 4. Cria usu√°rio padr√£o ===
RUN addgroup --gid 1000 prowler && \
    adduser --uid 1000 --gid 1000 --disabled-password --gecos "" prowler

USER prowler
WORKDIR /home/prowler

# === 5. Clona o reposit√≥rio oficial do Prowler ===
RUN git clone --depth 1 https://github.com/prowler-cloud/prowler.git /home/prowler/prowler

# === 6. Instala Poetry e depend√™ncias ===
ENV HOME='/home/prowler'
ENV PATH="${HOME}/.local/bin:${PATH}"

RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir poetry && \
    cd /home/prowler/prowler && \
    poetry install --compile && \
    rm -rf ~/.cache/pip

# === 7. Instala m√≥dulo PowerShell do M365 ===
RUN cd /home/prowler/prowler && \
    poetry run python prowler/providers/m365/lib/powershell/m365_powershell.py

# === 8. Remove pacotes Python legados (dash-html, dash-core) ===
RUN pip uninstall -y dash-html-components dash-core-components || true

# === 9. Copia o script principal ===
USER root
COPY run-prowler.sh /usr/local/bin/run-prowler.sh
RUN dos2unix /usr/local/bin/run-prowler.sh && chmod +x /usr/local/bin/run-prowler.sh

# === 10. PATH global e entrypoint ===
ENV PATH="/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/home/prowler/.local/bin:/home/prowler/prowler"

# Mant√©m container ativo em caso de falha
ENTRYPOINT ["/bin/bash", "-c", "/usr/local/bin/run-prowler.sh || (echo '‚ö†Ô∏è Falha detectada ‚Äî container ativo para debug...' && sleep infinity)"]
