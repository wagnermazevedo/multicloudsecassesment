# =======================================================
# Dockerfile.prowler - Build Autossuficiente Corrigido
# =======================================================

FROM public.ecr.aws/docker/library/python:3.12-slim-bookworm

LABEL maintainer="Wagner Azevedo"
LABEL description="Imagem multicloud-sec com Prowler, AWS CLI e PowerShell integrados"

USER root

# === Variáveis de versão ===
ARG POWERSHELL_VERSION=7.5.0
ARG AWS_CLI_VERSION=2.15.55

# === 1. Dependências básicas ===
RUN apt-get update && apt-get install -y --no-install-recommends \
    git bash curl unzip jq wget build-essential libffi-dev libssl-dev pkg-config \
    libicu72 libunwind8 libssl3 libcurl4 ca-certificates apt-transport-https gnupg dos2unix && \
    rm -rf /var/lib/apt/lists/*

# === 2. Instala AWS CLI v2 ===
RUN curl -s "https://awscli.amazonaws.com/awscli-exe-linux-x86_64-${AWS_CLI_VERSION}.zip" -o "awscliv2.zip" && \
    unzip -q awscliv2.zip && ./aws/install && rm -rf awscliv2.zip ./aws

# === 3. Instala PowerShell ===
RUN ARCH=$(uname -m) && \
    if [ "$ARCH" = "x86_64" ]; then \
        wget --progress=dot:giga https://github.com/PowerShell/PowerShell/releases/download/v${POWERSHELL_VERSION}/powershell-${POWERSHELL_VERSION}-linux-x64.tar.gz -O /tmp/powershell.tar.gz ; \
    elif [ "$ARCH" = "aarch64" ]; then \
        wget --progress=dot:giga https://github.com/PowerShell/PowerShell/releases/download/v${POWERSHELL_VERSION}/powershell-${POWERSHELL_VERSION}-linux-arm64.tar.gz -O /tmp/powershell.tar.gz ; \
    else \
        echo "Unsupported architecture: $ARCH" && exit 1 ; \
    fi && \
    mkdir -p /opt/microsoft/powershell/7 && \
    tar zxf /tmp/powershell.tar.gz -C /opt/microsoft/powershell/7 && \
    chmod +x /opt/microsoft/powershell/7/pwsh && \
    ln -s /opt/microsoft/powershell/7/pwsh /usr/bin/pwsh && \
    rm /tmp/powershell.tar.gz

# === 4. Cria usuário padrão ===
RUN addgroup --gid 1000 prowler && \
    adduser --uid 1000 --gid 1000 --disabled-password --gecos "" prowler
USER prowler
WORKDIR /home/prowler

# === 5. Copia o código do Prowler ===
COPY prowler/  /home/prowler/prowler/
COPY dashboard/ /home/prowler/dashboard/
COPY pyproject.toml README.md /home/prowler/

ENV HOME='/home/prowler'
ENV PATH="${HOME}/.local/bin:${PATH}"

# === 6. Instala Poetry e dependências ===
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir poetry && \
    cd /home/prowler/prowler && \
    poetry config virtualenvs.create true && \
    poetry config virtualenvs.in-project false && \
    poetry install --no-root --compile && \
    rm -rf ~/.cache/pip

# === 7. Executa script PowerShell para M365 (corrigido caminho) ===
RUN cd /home/prowler/prowler && \
    poetry run python providers/m365/lib/powershell/m365_powershell.py || true

# === 8. Remove dependências antigas ===
RUN pip uninstall -y dash-html-components dash-core-components || true

# === 9. Volta para root para criar links e scripts globais ===
USER root

# === 10. Localiza virtualenv e linka binário ===
RUN echo '#!/bin/bash' > /tmp/setup_prowler.sh && \
    echo 'set -e' >> /tmp/setup_prowler.sh && \
    echo 'VENV_PATH=$(find /home/prowler/.cache/pypoetry/virtualenvs -maxdepth 1 -type d -name "prowler*" | head -n 1 || true)' >> /tmp/setup_prowler.sh && \
    echo 'echo "Virtualenv detectado: ${VENV_PATH:-nao_encontrado}"' >> /tmp/setup_prowler.sh && \
    echo 'if [ -n "$VENV_PATH" ] && [ -x "$VENV_PATH/bin/prowler" ]; then' >> /tmp/setup_prowler.sh && \
    echo '  echo "Linkando $VENV_PATH/bin/prowler para /usr/local/bin/prowler"' >> /tmp/setup_prowler.sh && \
    echo '  echo "export PATH=\\$PATH:$VENV_PATH/bin" >> /etc/profile.d/prowler.sh' >> /tmp/setup_prowler.sh && \
    echo '  ln -sf "$VENV_PATH/bin/prowler" /usr/local/bin/prowler' >> /tmp/setup_prowler.sh && \
    echo 'else' >> /tmp/setup_prowler.sh && \
    echo '  echo "Aviso: Virtualenv nao localizado — criando fallback..."' >> /tmp/setup_prowler.sh && \
    echo '  ln -sf /home/prowler/prowler/prowler.py /usr/local/bin/prowler || true' >> /tmp/setup_prowler.sh && \
    echo 'fi' >> /tmp/setup_prowler.sh && \
    chmod +x /tmp/setup_prowler.sh && \
    /tmp/setup_prowler.sh && rm -f /tmp/setup_prowler.sh

# === 11. Cria script de PATH dinâmico (executado como root) ===
RUN echo '#!/bin/bash' > /etc/profile.d/prowler_path.sh && \
    echo 'if [ -d "/home/prowler/.cache/pypoetry/virtualenvs" ]; then' >> /etc/profile.d/prowler_path.sh && \
    echo '  VENV_DIR=$(find /home/prowler/.cache/pypoetry/virtualenvs -maxdepth 1 -type d -name "prowler*" | head -n 1)' >> /etc/profile.d/prowler_path.sh && \
    echo '  if [ -n "$VENV_DIR" ]; then' >> /etc/profile.d/prowler_path.sh && \
    echo '    export PATH=$PATH:$VENV_DIR/bin' >> /etc/profile.d/prowler_path.sh && \
    echo '  fi' >> /etc/profile.d/prowler_path.sh && \
    echo 'fi' >> /etc/profile.d/prowler_path.sh && \
    chmod +x /etc/profile.d/prowler_path.sh

# === 12. Copia o script principal ===
COPY run-prowler.sh /usr/local/bin/run-prowler.sh
RUN dos2unix /usr/local/bin/run-prowler.sh && chmod +x /usr/local/bin/run-prowler.sh

# === 13. ENTRYPOINT ===
ENTRYPOINT ["/bin/bash", "-c", "source /etc/profile.d/prowler_path.sh && /usr/local/bin/run-prowler.sh || (echo 'Falha detectada — container ativo para debug...' && sleep infinity)"]
