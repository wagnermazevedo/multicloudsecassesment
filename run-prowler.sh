#!/bin/bash
set -euo pipefail

# === LOCALIZA√á√ÉO E INSTALA√á√ÉO DO PROWLER (Inicio) ===

# 1. Tenta encontrar 'prowler' diretamente
if ! command -v prowler &> /dev/null; then
    echo "‚ö†Ô∏è Prowler n√£o encontrado. Tentando instalar uma vers√£o tempor√°ria..."
    
    # 2. Instala via pip. O diret√≥rio bin√°rio geralmente √© /root/.local/bin para root.
    if ! pip install prowler-cli --quiet; then
        echo "‚ùå Falha ao instalar prowler-cli via pip. Abortando."
        exit 1
    fi
    
    # Adiciona o local de instala√ß√£o comum do pip ao PATH para esta sess√£o
    export PATH="$PATH:/root/.local/bin:/home/prowler/.local/bin"
    echo "üîß PATH tempor√°rio ajustado para incluir ~/.local/bin."
fi

# 3. Localiza o bin√°rio ap√≥s potencial instala√ß√£o ou em diret√≥rios padr√£o
PROWLER_BIN_PATH=$(command -v prowler || true)

if [ -z "$PROWLER_BIN_PATH" ]; then
    echo "‚ùå Prowler n√£o encontrado em nenhum diret√≥rio ap√≥s a instala√ß√£o. Abortando."
    exit 1
fi

# 4. Garante que o bin√°rio est√° em /usr/local/bin para acesso consistente
# Isso resolve o problema de PATH em subshells e futuras chamadas.
if [[ "$PROWLER_BIN_PATH" != "/usr/local/bin/prowler" ]]; then
    echo "üîó Criando link simb√≥lico: $PROWLER_BIN_PATH -> /usr/local/bin/prowler"
    ln -sf "$PROWLER_BIN_PATH" /usr/local/bin/prowler || true
    chmod +x "$PROWLER_BIN_PATH" || true
fi

# 5. Teste final de acesso
if ! command -v prowler &> /dev/null; then
    echo "‚ùå Mesmo ap√≥s corre√ß√µes, 'prowler' n√£o √© execut√°vel. Abortando."
    exit 1
fi

echo "‚úÖ Prowler validado e pronto para execu√ß√£o: $(command -v prowler)"
prowler --version || echo "‚ö†Ô∏è N√£o foi poss√≠vel exibir a vers√£o do prowler."

# O SCRIPT AGORA PODE USAR APENAS O COMANDO 'prowler'

echo "üõ∞Ô∏è === Iniciando execu√ß√£o do Prowler Runner ==="

# === Diagn√≥stico inicial ===
echo "üìÇ Diret√≥rio atual (pwd): $(pwd)"
echo "üë§ Usu√°rio atual: $(whoami)"
echo "üîß PATH atual: $PATH"

# As linhas abaixo de diagn√≥stico foram removidas para simplificar, mas podem ser mantidas se desejar.
# O novo fluxo garante que 'prowler' esteja em um local conhecido e acess√≠vel.

# === VARI√ÅVEIS OBRIGAT√ìRIAS ===
: "${CLOUD_PROVIDER:?‚ùå CLOUD_PROVIDER n√£o definido (aws | azure | gcp)}"
: "${TARGET_ACCOUNTS:?‚ùå TARGET_ACCOUNTS n√£o definido (IDs separados por v√≠rgula ou ALL)}"

REGION="${AWS_REGION:-us-east-1}"
BUCKET="my-prowler-results"
TIMESTAMP=$(date +%Y%m%d%H%M)
OUTPUT_DIR="/tmp"
OUTPUTS=()

# Normaliza cloud provider (case insensitive)
CLOUD_PROVIDER=$(echo "$CLOUD_PROVIDER" | tr '[:upper:]' '[:lower:]')

# === Fun√ß√£o de upload para S3 ===
upload_to_s3() {
    local file="$1"
    local account="$2"
    local dest="s3://${BUCKET}/${CLOUD_PROVIDER}/${account}/${TIMESTAMP}/$(basename "$file")"
    echo "üì§ Enviando $file ‚Üí $dest"
    aws s3 cp "$file" "$dest" --acl bucket-owner-full-control || {
        echo "‚ùå Falha no upload de $file"
        return 1
    }
}

# === Fun√ß√£o gen√©rica de execu√ß√£o ===
run_prowler_generic() {
    local provider="$1"
    local id="$2"
    shift 2
    local extra_args=("$@")

    echo "üöÄ Executando Prowler para ${provider^^} ‚Üí $id"
    local OUT_FILE="${OUTPUT_DIR}/prowler-output-${id}-${TIMESTAMP}.json"

    # CORRE√á√ÉO: Usando 'prowler' diretamente, n√£o mais a vari√°vel $PROWLERPATH
    prowler "$provider" "${extra_args[@]}" \
        --output-formats json-asff \
        --output-filename "$(basename "$OUT_FILE" .json)" \
        --output-directory "$OUTPUT_DIR" \
        --ignore-exit-code-3

    if [[ -f "$OUT_FILE" ]]; then
        echo "‚úÖ Arquivo gerado: $OUT_FILE"
        OUTPUTS+=("$OUT_FILE")
        upload_to_s3 "$OUT_FILE" "$id"
    else
        echo "‚ùå Arquivo n√£o encontrado para $id"
    fi
}

# === AWS ===
if [[ "$CLOUD_PROVIDER" == "aws" ]]; then
    echo "‚òÅÔ∏è  Selecionado AWS"

    if [[ "$TARGET_ACCOUNTS" == "ALL" ]]; then
        echo "üîé Buscando contas AWS no SSM..."
        TARGET_ACCOUNTS=$(aws ssm get-parameter \
            --name "/prowler/aws/accounts" \
            --query "Parameter.Value" \
            --output text)
    fi

    for ACCOUNT_ID in $(echo "$TARGET_ACCOUNTS" | tr ',' ' '); do
        echo "üéØ Conta alvo: $ACCOUNT_ID"
        CREDS=$(aws sts assume-role \
            --role-arn arn:aws:iam::${ACCOUNT_ID}:role/ProwlerAuditRole \
            --role-session-name prowler-session)

        export AWS_ACCESS_KEY_ID=$(echo "$CREDS" | jq -r .Credentials.AccessKeyId)
        export AWS_SECRET_ACCESS_KEY=$(echo "$CREDS" | jq -r .Credentials.SecretAccessKey)
        export AWS_SESSION_TOKEN=$(echo "$CREDS" | jq -r .Credentials.SessionToken)

        run_prowler_generic aws "$ACCOUNT_ID" --region "$REGION"

        unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN
    done
fi

# === AZURE ===
# (O resto do script para Azure e GCP permanece inalterado, pois usa run_prowler_generic)
if [[ "$CLOUD_PROVIDER" == "azure" ]]; then
    echo "‚òÅÔ∏è  Selecionado Azure"
    # ... (c√≥digo azure)
    if [[ "$TARGET_ACCOUNTS" == "ALL" ]]; then
        echo "üîé Buscando subscriptions Azure no SSM..."
        TARGET_ACCOUNTS=$(aws ssm get-parameter \
            --name "/prowler/azure/subscriptions" \
            --query "Parameter.Value" \
            --output text)
    fi
    for SUB in $(echo "$TARGET_ACCOUNTS" | tr ',' ' '); do
        run_prowler_generic azure "$SUB" --subscription-id "$SUB"
    done
fi

# === GCP ===
if [[ "$CLOUD_PROVIDER" == "gcp" ]]; then
    echo "‚òÅÔ∏è  Selecionado GCP"
    # ... (c√≥digo gcp)
    if [[ "$TARGET_ACCOUNTS" == "ALL" ]]; then
        echo "üîé Buscando projetos GCP no SSM..."
        TARGET_ACCOUNTS=$(aws ssm get-parameter \
            --name "/prowler/gcp/projects" \
            --query "Parameter.Value" \
            --output text)
    fi

    echo "üîë Recuperando credenciais de service account..."
    aws ssm get-parameter \
        --name "/prowler/gcp/michel/serviceAccountKey" \
        --with-decryption \
        --query "Parameter.Value" \
        --output text | base64 -d > /tmp/prowler-sa.json
    export GOOGLE_APPLICATION_CREDENTIALS="/tmp/prowler-sa.json"

    for PROJECT in $(echo "$TARGET_ACCOUNTS" | tr ',' ' '); do
        run_prowler_generic gcp "$PROJECT" --project-id "$PROJECT"
    done
fi

echo "üßæ === Execu√ß√£o finalizada. Relat√≥rios gerados: ==="
printf '%s\n' "${OUTPUTS[@]}"
